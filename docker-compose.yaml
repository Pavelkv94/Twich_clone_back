services:
  epic_stream_server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: epic_stream_server
    restart: unless-stopped
    ports:
      - "5005:5000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - APPLICATION_URI=${APPLICATION_URI}
      - GRAPHQL_PATH=${GRAPHQL_PATH}
      - ALLOWED_ORIGIN=${ALLOWED_ORIGIN}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - SESSION_NAME=${SESSION_NAME}
      - SESSION_DOMAIN=${SESSION_DOMAIN}
      - SESSION_MAX_AGE=${SESSION_MAX_AGE}
      - SESSION_HTTP_ONLY=${SESSION_HTTP_ONLY}
      - SESSION_SECURE=${SESSION_SECURE}
      - SESSION_PREFIX=${SESSION_PREFIX}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_URI=${POSTGRES_URI}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_URI=${REDIS_URI}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - LIVEKIT_URL=${LIVEKIT_URL}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    depends_on:
      - epic_stream_postgres
    volumes:
      - .:/usr/src/app
    networks:
      - epic_stream_network

  epic_stream_postgres:
    image: postgres:latest
    container_name: epic_stream_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5435:5432"
    volumes:
      - epic_stream_postgres:/var/lib/postgresql/data
    networks:
      - epic_stream_network

  epic_stream_redis:
    image: redis:latest
    container_name: epic_stream_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - epic_stream_redis:/data
    networks:
      - epic_stream_network

volumes:
  epic_stream_postgres:
  epic_stream_redis:

networks:
  epic_stream_network:
